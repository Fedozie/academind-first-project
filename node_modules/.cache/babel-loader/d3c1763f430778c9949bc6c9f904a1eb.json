{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Downloads/01-starting-setup/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport './Expenses.css';\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState(2020);\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  const expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 29\n  }, this);\n\n  if (filteredExpenses.length > 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        onChangeFilter: filterChangeHandler,\n        selected: filteredYear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), filteredExpenses.length === 0 && expensesContent, filteredExpenses.length > 0 && filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: expense.title,\n        amount: expense.amount,\n        date: expense.date\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Expenses, \"A1t+UaesDDb2kwp/siawBX5PbVE=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/mac/Downloads/01-starting-setup/src/components/Expenses/Expenses.js"],"names":["React","useState","ExpenseItem","Card","ExpensesFilter","Expenses","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","items","filter","expense","date","getFullYear","toString","expensesContent","length","map","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,IAAD,CAAhD;;AAEA,QAAMQ,mBAAmB,GAAIC,YAAD,IAAkB;AAC1CF,IAAAA,eAAe,CAACE,YAAD,CAAf;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAoBC,OAAD,IAAc;AACtD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CV,YAAjD;AACH,GAFwB,CAAzB;;AAIA,QAAMW,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAxB;;AAEA,MAAGP,gBAAgB,CAACQ,MAAjB,GAA0B,CAA7B,EAEA,oBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAG,UAAlB;AAAA,8BACI,QAAC,cAAD;AAAgB,QAAA,cAAc,EAAIV,mBAAlC;AAAuD,QAAA,QAAQ,EAAIF;AAAnE;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKI,gBAAgB,CAACQ,MAAjB,KAA4B,CAA5B,IAAiCD,eAFtC,EAGKP,gBAAgB,CAACQ,MAAjB,GAA0B,CAA1B,IACGR,gBAAgB,CAACS,GAAjB,CAAsBN,OAAD,iBACjB,QAAC,WAAD;AAEI,QAAA,KAAK,EAAIA,OAAO,CAACO,KAFrB;AAGI,QAAA,MAAM,EAAIP,OAAO,CAACQ,MAHtB;AAII,QAAA,IAAI,EAAIR,OAAO,CAACC;AAJpB,SACWD,OAAO,CAACS,EADnB;AAAA;AAAA;AAAA;AAAA,cADJ,CAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAlCD;;GAAMlB,Q;;KAAAA,Q;AAoCN,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react';\nimport ExpenseItem from './ExpenseItem';\nimport './Expenses.css';\nimport Card from '../UI/Card';\nimport ExpensesFilter from './ExpensesFilter';\n\nconst Expenses = (props) => {\n    const [filteredYear, setFilteredYear] = useState(2020)\n\n    const filterChangeHandler = (selectedYear) => {\n        setFilteredYear(selectedYear)\n    }\n\n    const filteredExpenses = props.items.filter((expense)  => {\n        return expense.date.getFullYear().toString() === filteredYear\n    })\n\n    const expensesContent = <p>No expenses</p>;\n\n    if(filteredExpenses.length > 0 )\n    \n    return (\n        <div>\n            <Card className = \"expenses\">\n                <ExpensesFilter onChangeFilter = {filterChangeHandler} selected = {filteredYear}/>\n                {filteredExpenses.length === 0 && expensesContent}\n                {filteredExpenses.length > 0 && (\n                    filteredExpenses.map((expense) => (\n                        <ExpenseItem\n                            key = {expense.id}\n                            title = {expense.title}\n                            amount = {expense.amount}\n                            date = {expense.date}\n                        />\n                    ))\n                )}\n            </Card>\n        </div>\n        \n    );\n}\n \nexport default Expenses;"]},"metadata":{},"sourceType":"module"}